#ifndef ERROR_CODE_H
#define ERROR_CODE_H

// error_code's representation:
// 0xXXXXXXXX
//   X: module_sign, less than 15 modules
//    XX: class_sign, less than 255 classes in a moudle
//      XX: fun_id, less than 255 functions in a class
//        XXX: error_code, less than 4095 errors
#define MODULE_SIGN	0xF0000000
#define CLASS_SIGN	0x0FF00000
#define FUN_ID		0x000FF000
#define ERROR_CODE	0x00000FFF

// Module
typedef enum
{
	TOOLS			= 0x10000000,
	PROTOCOLS 		= 0x20000000,
	MODULES			= 0x30000000,
	NETWORK			= 0x40000000,
	TRANSACTIONS	= 0x50000000,
	XMLPARSER 		= 0x60000000,
} module_sign;

// Class
typedef enum
{
	CBASECLASS				= 0x00000000,

	CRESOURCE				= TOOLS			| 0x00100000,
	CREGISTER				= TOOLS			| 0x00200000,

	CPDUINFO				= PROTOCOLS		| 0x00100000,
	CPROTOCOLINFO 			= PROTOCOLS		| 0x00200000,
	CPROTOCOLMANAGER 		= PROTOCOLS		| 0x00300000,

	CINTERFACEINFO			= MODULES		| 0x00100000,
	CMODULEINFO 			= MODULES		| 0x00200000,
	CMODULEMANAGER 			= MODULES		| 0x00300000,

	CACCEPTORCONF			= NETWORK		| 0x00100000,
	CCONNECTORCONF			= NETWORK		| 0x00200000,
	CRECEIVERCONF			= NETWORK		| 0x00300000,
	CSENDERCONF				= NETWORK		| 0x00400000,
	CACCEPTORHANDLE			= NETWORK		| 0x00500000,
	CCONNECTORHANDLE		= NETWORK		| 0x00600000,
	CRECEIVERHANDLE			= NETWORK		| 0x00700000,
	CSENDERHANDLE			= NETWORK		| 0x00800000,
	CACCEPTOR				= NETWORK		| 0x00900000,
	CCONNECTOR				= NETWORK		| 0x00A00000,
	CRECEIVER				= NETWORK		| 0x00B00000,
	CSENDER					= NETWORK		| 0x00C00000,
	CINTERFACEMANAGER		= NETWORK		| 0x00D00000,

	CPROCESSOR				= TRANSACTIONS	| 0x00100000,
	CTRANSACTION			= TRANSACTIONS	| 0x00200000,
	CTRANSACTIONMANAGER		= TRANSACTIONS	| 0x00300000,

	CXMLLOADER				= XMLPARSER		| 0x00100000,
	CXMLLOADERERRORHANDLE	= XMLPARSER		| 0x00200000,
	CXMLLOADERMANAGER		= XMLPARSER		| 0x00300000,
	CXMLLOADERNETWORK		= XMLPARSER		| 0x00400000,
	CXMLLOADERPROTOCOL		= XMLPARSER		| 0x00500000,
	CXMLLOADERMODULE		= XMLPARSER		| 0x00600000,
	CXMLLOADERTRANSACCTION	= XMLPARSER		| 0x00700000,
} class_sign;

// Function
typedef enum
{
	/////////////////////////////////////
	// ALL
	/////////////////////////////////////
	START	= 0x00000000,
	STOP	= 0x000FF000,
	LOAD	= 0x000FE000,
	RESET	= 0x000FD000,

	/////////////////////////////////////
	// TOOLS
	/////////////////////////////////////
	// CRESOURCE
	INITIALIZE					= 0x00001000,
	ALLOCATE					= 0x00002000,
	RELEASE						= 0x00003000,

	// CREGISTER
	REGITSTER					= 0x00001000,
	UNREGISTER					= 0x00002000,
	SEARCH						= 0x00003000,

	/////////////////////////////////////
	// PROTOCOLS
	/////////////////////////////////////
	// CPDUINFO
	ADD_FIELD					= 0x00001000,
	GET_FIELD					= 0x00002000,
	GET_STRUCT					= 0x00003000,

	// CPROTOCOLINFO
	ADD_HEAD_FIELD				= 0x00001000,
	GET_HEAD_FIELD				= 0x00002000,
	ADD_PDU						= 0x00003000,
	GET_PDU						= 0x00004000,

	// CPROTOCOLMANAGER
	ADD_PROTOCOL				= 0x00001000,
	GET_PROTOCOL				= 0x00002000,

	/////////////////////////////////////
	// MODULES
	/////////////////////////////////////
	// CINTERFACEINFO
	ADD_IN_FIELD				= 0x00001000,
	GET_IN_FIELD				= 0x00002000,
	ADD_OUT_FIELD				= 0x00003000,
	GET_OUT_FIELD				= 0x00004000,
	GET_IN_STRUCT				= 0x00005000,
	GET_OUT_STRUCT				= 0x00006000,

	// CMODULEINFO
	ADD_INTERFACE				= 0x00001000,
	GET_INTERFACE				= 0x00002000,

	// CMODULEMANAGER
	ADD_MODULE					= 0x00001000,
	GET_MODULE					= 0x00002000,

	/////////////////////////////////////
	// NETWORK
	/////////////////////////////////////
	// ALL CONFS
	CONFIG_PDU					= 0x00001000,
	IDENTIFY_ID					= 0x00002000,
	IDENTIFY_PDU				= 0x00003000,

	// ALL HANDLES
	OPEN						= 0X00001000,
	CLOSE						= 0x00002000,
	ON_MESSAGE					= 0x00003000,
	CHECK_SEND					= 0x00004000,
	HANDLE_SEND					= 0x00005000, // Actual name is "Send"
	ON_OPEN						= 0x00006000,
	ON_CLOSE					= 0x00007000,
	CHECK						= 0x00008000,

	// CINTERFACEMANAGER
	ADD_NETWORK					= 0x00001000,
	WORK						= 0x00002000,

	/////////////////////////////////////
	// TRANSACTIONS
	/////////////////////////////////////
	// CPROCESSOR
	SET_MSG_HANDLE				= 0x00001000,
	SET_HANDLE					= 0x00002000,
	SEND						= 0x00003000,
	EXEC_NORMAL_HANDLE			= 0x00004000,
	EXEC_MSG_HANDLE				= 0x00005000,
	PROCESSOR_REGISTER			= 0x00006000, // Actual name is "Register"
	PROCESSOR_UNREGISTER		= 0x00007000, // Actual name is "Unregister"

	// CTRANSACTION
	TRANSACTION_ALLOCATE		= 0x00001000, // Actual name is "Allocate"
	TRANSACTION_RELEASE			= 0x00002000, // Actual name is "Release"

	// CTRANSACTIONMANAGER
	ADD_TRANSACTION				= 0x00001000,
	GET_TRANSACTION				= 0x00002000,
	REGITSTER_PROCESSOR			= 0x00003000, // Actual name is "Register"
	UNREGISTER_PROCESSOR		= 0x00004000, // Actual name is "Unegister"
	SEARCH_PROCESSOR			= 0x00005000, // Actual name is "Search"

	/////////////////////////////////////
	// XMLPARSER
	/////////////////////////////////////
	// CXMLLOADER
	GET_LAST_NAME				= 0x00001000,
	GET_FIRST_NAME				= 0x00002000,
	GET_DIRECTION				= 0x00003000,
	GET_UNITARY_OPERATOR		= 0x00004000,
	GET_DUALITY_OPERATOR		= 0x00005000,
	GET_COMPARE_OPERATOR		= 0x00006000,
	GET_FIELD_TYPE				= 0x00007000,

	// CXMLLOADERPROTOCOL
	LOAD_PDU					= 0x00001000,
	LOAD_PDU_FIELD				= 0x00002000,

	// CXMLLOADERMODULE
	LOAD_MODULE					= 0x00001000,
	LOAD_INTERFACE				= 0x00002000,
	LOAD_INTERFACE_FIELD		= 0x00003000,
	// CXMLLOADERTRANSACCTION
	LOAD_DATA_BLOCK				= 0X00001000,
	LOAD_PROCESSOR				= 0x00002000,
	LOAD_PROGRAM				= 0x00003000,
	LOAD_PROCESS_BLOCK			= 0x00004000,

	LOAD_VARIABLE				= 0x0000A000,
	LOAD_SOLID_VARIABLE			= 0x0000B000,
	LOAD_GROUP_VARIABLE			= 0x0000C000,
	LOAD_NETWORK_VARIABLE		= 0x0000D000,
	LOAD_EXPRESSION				= 0x0000E000,

	LOAD_EMPTY					= 0x00011000,
	LOAD_UNITARY_CALCULATE		= 0x00012000,
	LOAD_DUALITY_CALCULATE		= 0x00013000,
	LOAD_CONFIG_GROUP			= 0X00014000,
	LOAD_IF						= 0x00015000,
	LOAD_WHILE					= 0x00016000,
	LOAD_CONTINUE				= 0x00017000,
	LOAD_BLOCK					= 0x00018000,
	LOAD_BREAK					= 0x00019000,
	LOAD_SEND					= 0x0001A000,
	LOAD_FORWARD				= 0x0001B00,
	LOAD_GET_ADDRESS			= 0x0001C000,
	LOAD_REGISTER				= 0x0001D000,
	LOAD_UNREGISTER				= 0x0001E000,
	LOAD_SEARCH					= 0x0001F000,
	LOAD_GET_USAGE				= 0x00020000,
	LOAD_NETWORK_WAKE_UP		= 0x00021000,
	LOAD_NETWORK_SLEEP			= 0x00022000,
	LOAD_READ_FILE				= 0x00023000,
	LOAD_SAVE_FILE				= 0x00024000,
	LOAD_DELETE_FILE			= 0x00025000,
	LOAD_USE_MODULE				= 0X00026000,
	LOAD_SPLIT					= 0x00027000,
	LOAD_DIE					= 0x00028000,
} fun_id;

// Error code
typedef enum
{
	SUCCESS,
	FAILURE = 0xFFFFFFFF,

	// 0x0000000X
	PARAMETER_1 = 0x00000001,
	PARAMETER_2,
	PARAMETER_3,
	PARAMETER_4,
	PARAMETER_5,
	PARAMETER_6,
	PARAMETER_7,
	PARAMETER_8,
	PARAMETER_9,
	PARAMETER_A,
	PARAMETER_B,
	PARAMETER_C,
	PARAMETER_D,
	PARAMETER_E,
	PARAMETER_N = 0x0000000F,

	// 0x000000XX
	PARAMETER_ERROR 		= 0x00000010,
	PARAMETER_NULL			= 0x00000020,
	PARAMETER_NOT_NULL		= 0x00000030,
	PARAMETER_EMPTY			= 0x00000040,
	PARAMETER_TYPE_ERROR	= 0x00000050,
	PARAMETER_SIZE_OVERFLOW	= 0x00000060,

	// 0x00000XXX
	ELEMENT_NULL_IN_CONTAINER = 0x00000100,
	NO_ELEMENT_IN_CONTAINER,
	ELEMENT_INSERT_FAILURUE,
	ELEMENT_ERROR_IN_CONTAINER,
	ELEMENT_EXIST_IN_CONTAINER,
	STRING_NULL,
	SIZE_OVERFLOW,
	TYPE_ERROR,
	SIZE_FIELD_ERROR,
	FROBID_USE,
	DEFINE_VARIABLE_FAILURE,
	SEND_FAILUE,
	XML_INITIALIZE_ERROR,
	XML_UNINITIALIZE_ERROR,
	XML_LOADER_ERROR,
	XML_TERMINATE_ERROR,
	XML_INVALID_ELEMENT,
	XML_FILE_NOT_EXIST,
	XML_MODULE_NOT_EXIST,

	VARIABLE_OPERATION_ERROR,
	OPERATOR_OPERAITON_ERROR,

	FILE_READ_ERROR,
	FILE_WRITE_ERROR,
	FILE_DELETE_ERROR,
	SYS_CALL_ERROR,

	FIELD_TYPE_ERROR,
	FIELD_DATA_NULL,
	FIELD_INDEX_ERROR,
	FIELD_SIZE_OVERLOADED,
} error_code;

#endif // ERROR_CODE_H
